// Generated by CoffeeScript 2.3.0
//if node
//fs = require 'fs'
//A = require './A'
//O = require './O'
var Base, trace, util;

trace = require('./trace');

util = require('./Util');

module.exports = Base = class Base {
  constructor(name) {
    
    //DUP
    this.log = this.log.bind(this);
    this.logError = this.logError.bind(this);
    this.logFatal = this.logFatal.bind(this);
    //endif
    this.logCatch = this.logCatch.bind(this);
    this.logWarning = this.logWarning.bind(this);
    this.name = name;
    //		console.log "base=#{@name}"
    //		@log "Base: #{@constructor.name}"
    this.name = this.constructor.name; //+ "(Base)"
  }

  log(s, o, opt) {
    return util.logBase(this.name, s, o, opt);
  }

  logError(s, o, opt) {
    return util.logBase(this.name, `ERROR: ${s}`, o, opt);
  }

  logFatal(s, o, opt) {
    util.logBase(this.name, `FATAL: ${s}:`, o, opt);
    //if node
    return process.exit(1);
  }

  logCatch(s, o, opt) {
    return util.logBase(this.name, `CATCH: ${s}`, o, opt);
  }

  logWarning(s, o, opt) {
    if (trace.WARNINGS) {
      return util.logBase(this.name, `WARNING: ${s}`, o, opt);
    }
  }

};

//endif
