// Generated by CoffeeScript 2.3.0
var A, O, read, util, write;

A = require('./A');

O = require('./O');

util = require('./Util');

// get(__id, ~degree)... look at piece of paper...
read = function(__id) {
  return new Promise((resolve, reject) => {
    var _;
    if (_ = config.proxyMap[__id]) {
      //				@log "get #{__id} **** HIT ****"
      return resolve(_);
    } else {
      this.log(`get ${__id}`);
      return Expo.FileSystem.readAsStringAsync(this.path(`object${__id}`)).then((json) => {
        var o;
        o = JSON.parse(json);
        return this.propertiesLoad(o);
      }).catch((ex) => {
        this.logCatch(`get ${__id}: Can't find 'object${__id}.json': ${ex}`);
        //TODO: get from server
        //TODO: o.__id = __id
        return reject(ex);
      });
    }
  });
};

write = function(__id) {
  return Expo.FileSystem.writeAsStringAsync(flexbase.path(`object${this.__id}`), json).then(() => {
    return resolve(this);
  }).catch(function(ex) {
    return reject(ex);
  });
};

module.exports = {
  read: read,
  write: write
};
